<!-- _meta/attr/edit/relationSelect -->
<%
const extraData = extraMeta.getData(attr.getListView());
const relation = attr.relation;
const params = `c=${relation.refClass.id}&m=${attr.name}.${model.getViewMetaId()}`;
const value = model.get(attr);
const defaultValue = model.isNew() ? model.get(attr) : null;
const related = model.related.get(attr);
const access = security.relationAccessMap[attr.name];
const commands = attr.commandMap;
const p = {
    key: relation.refClass.getKey(),
    multiple: relation.multiple,
    maxSelectionLength: relation.maxItems,
    list: commands.add ? `office/model/list-related-select?${params}` : false,
    unlink: commands.remove,
    update: commands.edit ? `office/model/update?${params}` : false,
    create: commands.create && access.canCreate() ? `office/model/create?${params}` : false,
    delete: commands.delete && access.canDelete(),
    viewTitle: `office/model/title?${params}`,
    ...attr.options.relation
};
const sortCommands = include(_view.get('_meta/attr/sort'), {p, extraData, access, params});
%>
<div class="form-attr form-group <%- required %> <%- attr.options.css %>"
     data-handler="<%- typeof handler === 'undefined' ? 'RelationSelect' : handler %>"
     data-action-binder="<%= attr.actionBinder.stringified %>">
    <label class="<%- attr.options.cssLabel || 'col-md-2' %> control-label"
           title="<%= attr.extHint %>"
           data-t="meta.<%- attr.translationKey %>"><%- attr.title %></label>
    <div class="<%- attr.options.cssValue || 'col-md-10' %>">
        <div class="box relation-select-box">
            <div class="box-body">
                <div class="list-commands">
                    <% if (p.unlink) { %>
                    <div class="btn-set">
                        <button data-command="unlink" class="btn btn-default" type="button" title="Remove">
                            <span class="fa fa-unlink text-danger"></span>
                        </button>
                    </div>
                    <% } if (p.create) { %>
                    <button data-command="create" class="btn btn-success btn-light" type="button" title="Create">
                        <span class="glyphicon glyphicon-plus"></span>
                    </button>
                    <% } if (p.update) { %>
                    <button data-command="update" class="btn btn-warning btn-light" type="button" title="Edit">
                        <span class="glyphicon glyphicon-pencil"></span>
                    </button>
                    <% } if (p.delete) { %>
                    <button data-command="delete" class="btn btn-default" type="button" title="Delete">
                        <span class="glyphicon glyphicon-trash text-danger"></span>
                    </button>
                    <% } %>
                    <%- sortCommands %>
                </div>
                <input type="hidden" name="<%- formAttrName %>" value="<%= defaultValue %>" class="form-value">
                <select class="form-control" <% if (p.multiple) { %>multiple<% } %>
                        data-params="<%= JSON.stringify(p) %>">
                    <% if (Array.isArray(related)) {
                       for (const item of related) { %>
                    <option value="<%- item.getId() %>" selected><%- item.getEscapedTitle() %></option>
                    <% }} else if (related) { %>
                    <option value="<%- related.getId() %>" selected><%- related.getEscapedTitle() %></option>
                    <% } else if (Array.isArray(value)) {
                         for (const item of value) { %>
                    <option value="<%= item %>" selected><%= item %></option>
                    <% }} else if (value) { %>
                    <option value="<%= value %>" selected><%= value %></option>
                    <% } %>
                </select>
            </div>
        </div>
        <div class="error-block"></div>
        <div class="hint-block" data-t="meta.<%- attr.translationKey %>"><%- attr.hint %></div>
    </div>
</div>